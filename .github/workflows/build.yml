name: Build

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: windows/wooting-rgb-sdk.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release|x64

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Add MSBuild to PATH (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Prepare Linux Build
        run: |
          sudo apt update
          sudo apt install libhidapi-dev libhidapi-hidraw0
        if: startsWith(matrix.os, 'ubuntu')

      - name: Build (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: cd linux && make

      - name: Build (Mac)
        if: startsWith(matrix.os, 'mac')
        run: cd mac && make

      # - name: Restore NuGet packages
      #   working-directory: ${{env.GITHUB_WORKSPACE}}
      #   run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Build (Windows)
        if: startsWith(matrix.os, 'windows')
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
